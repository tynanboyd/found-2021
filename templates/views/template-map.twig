{% extends 'base.twig' %}

{% block pageContent %}

  <div class="container events">
    <div class="row">
        <div class="col-12">
          <div class="acf-map" data-zoom="16">
            {% for event in events %}
              {% if event.event_location %}
                <div class="marker" data-lat="{{ event.event_location.lat }}" data-lng="{{ event.event_location.lng }}">
                  <a href="{{ event.link }}"><h3>{{ event.title }}</h3></a>
                  <p><em>{{ event.event_location.address }}</em></p>
                </div>
                {% endif %}
              {% endfor %}
          </div>
        </div>
    </div>
  </div>

 <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAiJRmvCL9-55PIOlntDpI-R5v6IHQk87U"></script>

 <script type="text/javascript">
 (function($) {

 /*
 *  new_map
 *
 *  This function will render a Google Map onto the selected jQuery element
 *
 *  @type	function
 *  @date	8/11/2013
 *  @since	4.3.0
 *
 *  @param	$el (jQuery element)
 *  @return	n/a
 */

 function new_map( $el ) {

   // var
   var $markers = $el.find('.marker');


   // vars
   var args = {
     zoom		: 16,
     center		: new google.maps.LatLng(0, 0),
     mapTypeId	: google.maps.MapTypeId.ROADMAP,
     styles: [{"featureType":"administrative","elementType":"labels.text.fill","stylers":[{"color":"#444444"}]},{"featureType":"landscape","elementType":"all","stylers":[{"color":"#f2f2f2"}]},{"featureType":"poi","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"road","elementType":"all","stylers":[{"saturation":-100},{"lightness":45}]},{"featureType":"road.highway","elementType":"all","stylers":[{"visibility":"simplified"}]},{"featureType":"road.arterial","elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"water","elementType":"all","stylers":[{"color":"#ed8a81"},{"visibility":"on"}]}]
   };


   // create map
   var map = new google.maps.Map( $el[0], args);


   // add a markers reference
   map.markers = [];


   // add markers
   $markers.each(function(){

       add_marker( $(this), map );

   });


   // center map
   center_map( map );


   // return
   return map;

 }

 //http://commongroundarts.ca/found/wp-content/uploads/2019/06/map-marker-2019.png

 /*
 *  add_marker
 *
 *  This function will add a marker to the selected Google Map
 *
 *  @type	function
 *  @date	8/11/2013
 *  @since	4.3.0
 *
 *  @param	$marker (jQuery element)
 *  @param	map (Google Map object)
 *  @return	n/a
 */

 function add_marker( $marker, map ) {

   // var
   var latlng = new google.maps.LatLng( $marker.attr('data-lat'), $marker.attr('data-lng') );

   var image = {
       url: 'https://commongroundarts.ca/found/wp-content/uploads/2021/07/map-marker-burnt-coral.png',
       // This marker is 20 pixels wide by 32 pixels high.
       size: new google.maps.Size(27, 42),
       // The origin for this image is (0, 0).
       origin: new google.maps.Point(0, 0),
       // The anchor for this image is the base of the flagpole at (0, 32).
       anchor: new google.maps.Point(0, 21)
     };

   // create marker
   var marker = new google.maps.Marker({
     position	: latlng,
     map			: map,
     icon		: image
   });



   // add to array
   map.markers.push( marker );

   // if marker contains HTML, add it to an infoWindow
   if( $marker.html() )
   {
     // create info window
     var infowindow = new google.maps.InfoWindow({
       content		: $marker.html()
     });

     // show info window when marker is clicked
     google.maps.event.addListener(marker, 'click', function() {

       infowindow.open( map, marker );

     });
   }

 }

 /*
 *  center_map
 *
 *  This function will center the map, showing all markers attached to this map
 *
 *  @type	function
 *  @date	8/11/2013
 *  @since	4.3.0
 *
 *  @param	map (Google Map object)
 *  @return	n/a
 */

 function center_map( map ) {

   // vars
   var bounds = new google.maps.LatLngBounds();

   // loop through all markers and create bounds
   $.each( map.markers, function( i, marker ){

     var latlng = new google.maps.LatLng( marker.position.lat(), marker.position.lng() );

     bounds.extend( latlng );

   });

   // only 1 marker?
   if( map.markers.length == 1 )
   {
     // set center of map
       map.setCenter( bounds.getCenter() );
       map.setZoom( 16 );
   }
   else
   {
     // fit to bounds
     map.fitBounds( bounds );
   }

 }

 /*
 *  document ready
 *
 *  This function will render each map when the document is ready (page has loaded)
 *
 *  @type	function
 *  @date	8/11/2013
 *  @since	5.0.0
 *
 *  @param	n/a
 *  @return	n/a
 */
 // global var
 var map = null;

 $(document).ready(function(){

   $('.acf-map').each(function(){

     // create map
     map = new_map( $(this) );

   });

 });

 })(jQuery);
 </script>

{% endblock %}

